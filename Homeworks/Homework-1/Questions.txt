William Basquez MW 3:00 - 4:20PM

Question 1: What should the CPU utilization be?
Answer: It should be 100%, since we specified that the chances each instruction is a CPU instruction is 100%.

Question 2: How long does it take to complete both processes?
Answer: It should take 10 time units to complete both processes.
In the first 4 time units, the CPU performs the first process' instructions, then when they are done, the second process takes over and performs the single instruction remaining.
After this is done, the second process waits 4 time units until its done, and then both processes are done (4+1+4+1 = 10).

Question 3: Using the same command as before, Does switching the order matter?
Answer: It should take 6 time units to complete both processes. 
The first time unit, the first process issues an IO, and the second process is READY. 
When the first process finish executing the IO instruction, it moves to the WAITING state, and at the same time the second process runs its 4 CPU instructions (1+4+1 = 6). 
Order does matter because it determines whether or not a process executes while the other one is in the WAITING state.  

Question 4: What happens when you run the following 2 processes (-l 1:0, 4:100 -c -S SWITCH_ON_END)?
Answer: When running the processes, the first one executes an IO instruction, and then waits for 4 time units in which process 2 is in the READY state. 
Once the first process is done, the second process executes its 4 instructions finalizing both processes. 

Question 5: What will happen if we change the switching behavior on the previous command from SWITCH_ON_END to SWITCH_ON_IO?
Answer: Compared to the last result, this time while the first process is in the WAITING state, the second process executes its instructions, reducing the amount of times units. 

Question 6: What happens whe you run this combination of processes: -l 3:0,5:100,5:100,5:100 -S SWITCH_ON_IO -I IO_RUN_LATER?
Answer: No, the system's resources are not bein effectively utilized. 
Since IO runs later (Once all 3 processes with cpu instructions are done) the system then runs the remaining IO instructions, when the system should run IO instructions while running the cpu instructions.

Question 7: How does (-I IO_RUN_IMMEDIATE) behavior differ from the provious command? Why might running a process that just completed an IO again be a good idea?
Answer: Running IO instructions only after being in a WAITING state for a set amount of time units, ensures that resources are used better.

Question 8: Run the following commands; -s 1 -l 3:50,3:50 or -s 2 -l 3:50,3:50 or -s 3 -l 3:50,3:50. 
A) What happens when you use the flag -I IO_RUN_IMMEDIATE vs -I IO_RUN_LATER?
Answer: Both commands yield the same results.

B) What happens when you use -s SWITCH_ON_IO vs -S SWITCH_ON_END?
Answer: The "SWITCH_ON_IO" command yields better resource utilization than "SWITCH_ON_END", since it forces the system to run cpu instructions while waiting after IO instructions.
In comparison the "SWITCH_ON_END" command makes the system wait until a process is done executing IO requests, to then run cpu instructions.
